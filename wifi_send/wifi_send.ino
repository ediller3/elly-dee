/*
  WiFi UDP Send and Receive String

 This sketch wait an UDP packet on localPort using the WiFi module.
 When a packet is received an Acknowledge packet is sent to the client on port remotePort

 created 30 December 2012
 by dlf (Metodo2 srl)

 */

const uint8_t surfer_img[32][64][3] PROGMEM = {{{14, 7, 18}, {15, 8, 18}, {14, 6, 18}, {14, 7, 18}, {14, 7, 18}, {15, 6, 18}, {15, 8, 17}, {14, 8, 19}, {15, 7, 18}, {15, 7, 18}, {15, 6, 19}, {15, 7, 18}, {14, 7, 18}, {14, 6, 19}, {14, 7, 17}, {15, 8, 19}, {15, 7, 17}, {15, 7, 18}, {14, 7, 19}, {15, 7, 19}, {15, 7, 18}, {14, 6, 18}, {14, 6, 18}, {15, 6, 18}, {15, 7, 18}, {15, 6, 19}, {15, 7, 18}, {15, 7, 19}, {15, 6, 19}, {15, 6, 19}, {14, 7, 19}, {15, 8, 19}, {5, 3, 19}, {5, 3, 16}, {4, 4, 16}, {4, 2, 17}, {6, 2, 17}, {5, 2, 17}, {6, 3, 17}, {4, 3, 16}, {5, 3, 17}, {5, 3, 15}, {5, 3, 18}, {4, 3, 18}, {3, 3, 16}, {5, 4, 17}, {4, 2, 17}, {5, 3, 17}, {5, 3, 16}, {5, 4, 17}, {5, 3, 17}, {6, 3, 18}, {5, 3, 17}, {5, 2, 18}, {5, 2, 18}, {4, 3, 15}, {4, 3, 17}, {4, 3, 18}, {6, 3, 17}, {5, 3, 17}, {5, 3, 16}, {6, 4, 17}, {5, 3, 19}, {4, 3, 18}}, {{15, 6, 18}, {15, 6, 19}, {15, 7, 19}, {14, 6, 18}, {15, 7, 18}, {15, 6, 19}, {14, 7, 18}, {15, 7, 18}, {13, 6, 18}, {15, 7, 18}, {14, 6, 18}, {14, 6, 17}, {15, 6, 18}, {15, 6, 18}, {16, 7, 18}, {14, 8, 19}, {15, 7, 18}, {14, 7, 18}, {16, 8, 18}, {13, 7, 18}, {14, 7, 18}, {14, 7, 19}, {14, 7, 19}, {14, 6, 19}, {15, 7, 18}, {15, 7, 19}, {14, 7, 17}, {13, 7, 18}, {14, 7, 19}, {14, 8, 18}, {15, 7, 18}, {14, 7, 17}, {5, 4, 17}, {4, 4, 17}, {5, 3, 17}, {5, 3, 17}, {5, 3, 17}, {4, 4, 17}, {4, 4, 18}, {4, 4, 17}, {5, 2, 17}, {5, 3, 16}, {6, 4, 19}, {5, 3, 18}, {5, 3, 17}, {4, 2, 18}, {4, 3, 18}, {5, 3, 19}, {5, 4, 18}, {5, 1, 18}, {4, 3, 17}, {5, 4, 17}, {5, 3, 18}, {6, 3, 17}, {4, 2, 18}, {6, 4, 18}, {5, 2, 17}, {5, 3, 17}, {5, 2, 18}, {6, 2, 18}, {5, 3, 16}, {6, 3, 17}, {4, 4, 16}, {4, 3, 18}}, {{15, 7, 17}, {15, 7, 19}, {14, 5, 19}, {14, 7, 19}, {15, 7, 19}, {14, 6, 19}, {15, 7, 17}, {14, 7, 18}, {15, 7, 18}, {14, 8, 17}, {14, 6, 17}, {14, 7, 19}, {15, 6, 19}, {15, 7, 19}, {15, 6, 19}, {15, 8, 18}, {218, 255, 0}, {14, 7, 19}, {15, 6, 19}, {15, 6, 18}, {14, 7, 18}, {15, 7, 19}, {15, 8, 19}, {15, 7, 18}, {15, 7, 20}, {16, 6, 19}, {15, 6, 18}, {15, 7, 19}, {15, 7, 18}, {14, 6, 19}, {14, 6, 19}, {14, 7, 19}, {5, 4, 18}, {5, 3, 17}, {5, 4, 17}, {5, 3, 17}, {4, 3, 17}, {4, 2, 18}, {4, 3, 18}, {5, 4, 17}, {5, 3, 17}, {4, 3, 17}, {6, 2, 18}, {5, 3, 17}, {3, 3, 19}, {4, 3, 18}, {4, 3, 18}, {5, 2, 18}, {5, 2, 17}, {4, 3, 16}, {4, 3, 17}, {3, 3, 16}, {5, 3, 18}, {5, 3, 16}, {5, 3, 19}, {4, 2, 18}, {5, 3, 18}, {3, 3, 18}, {5, 3, 19}, {5, 3, 17}, {5, 4, 16}, {5, 2, 17}, {5, 3, 17}, {6, 3, 17}}, {{14, 7, 18}, {15, 6, 19}, {14, 6, 18}, {15, 6, 19}, {15, 7, 20}, {14, 6, 18}, {14, 7, 17}, {14, 6, 19}, {15, 7, 19}, {14, 6, 19}, {14, 7, 18}, {15, 6, 18}, {15, 7, 18}, {15, 7, 19}, {15, 7, 19}, {97, 155, 8}, {214, 255, 1}, {14, 6, 20}, {15, 7, 18}, {13, 6, 18}, {14, 6, 18}, {14, 7, 19}, {14, 7, 18}, {15, 6, 19}, {15, 6, 18}, {15, 7, 18}, {15, 6, 19}, {15, 6, 18}, {16, 6, 18}, {15, 7, 19}, {14, 6, 19}, {14, 6, 18}, {5, 2, 17}, {6, 3, 17}, {5, 2, 18}, {5, 3, 17}, {5, 3, 18}, {5, 4, 19}, {5, 2, 17}, {3, 3, 17}, {5, 3, 17}, {5, 3, 18}, {4, 3, 18}, {5, 2, 18}, {4, 4, 17}, {5, 3, 17}, {5, 3, 17}, {4, 3, 18}, {4, 3, 16}, {5, 3, 18}, {5, 3, 18}, {4, 3, 17}, {4, 2, 17}, {4, 3, 16}, {4, 3, 17}, {5, 3, 18}, {4, 3, 17}, {5, 4, 18}, {4, 3, 17}, {4, 2, 17}, {4, 3, 19}, {5, 3, 17}, {6, 3, 16}, {5, 3, 16}}, {{14, 7, 18}, {13, 5, 18}, {15, 7, 19}, {14, 7, 18}, {15, 7, 18}, {14, 6, 18}, {13, 7, 18}, {14, 6, 20}, {14, 7, 19}, {15, 7, 19}, {15, 7, 18}, {15, 6, 21}, {15, 6, 20}, {15, 7, 18}, {185, 255, 144}, {176, 238, 106}, {162, 174, 0}, {42, 40, 21}, {14, 5, 19}, {15, 5, 19}, {13, 7, 18}, {15, 7, 19}, {15, 7, 18}, {15, 8, 19}, {14, 7, 18}, {14, 6, 18}, {15, 6, 19}, {14, 7, 18}, {15, 6, 20}, {15, 7, 20}, {13, 8, 18}, {14, 6, 18}, {3, 2, 18}, {4, 2, 16}, {5, 3, 17}, {4, 2, 17}, {6, 2, 18}, {6, 3, 18}, {6, 3, 17}, {5, 3, 17}, {4, 3, 18}, {4, 4, 16}, {4, 2, 17}, {5, 4, 17}, {53, 150, 140}, {51, 154, 140}, {55, 154, 142}, {50, 150, 137}, {50, 145, 134}, {35, 120, 108}, {5, 3, 18}, {6, 2, 17}, {5, 3, 18}, {5, 3, 19}, {3, 3, 19}, {5, 4, 18}, {4, 4, 19}, {5, 3, 18}, {5, 3, 17}, {5, 3, 18}, {3, 3, 17}, {5, 2, 17}, {6, 3, 18}, {4, 5, 17}}, {{13, 7, 18}, {14, 7, 20}, {14, 7, 19}, {15, 6, 18}, {15, 6, 19}, {15, 7, 19}, {14, 6, 19}, {13, 7, 17}, {14, 6, 18}, {14, 6, 18}, {14, 5, 19}, {63, 56, 13}, {173, 212, 8}, {197, 255, 152}, {145, 241, 117}, {122, 232, 102}, {123, 234, 105}, {121, 232, 104}, {114, 102, 2}, {112, 143, 4}, {15, 7, 18}, {14, 7, 19}, {14, 6, 18}, {14, 6, 19}, {15, 7, 20}, {14, 7, 18}, {14, 7, 18}, {14, 6, 18}, {15, 7, 18}, {15, 7, 18}, {15, 7, 19}, {14, 7, 19}, {5, 2, 18}, {4, 3, 18}, {6, 4, 18}, {5, 2, 18}, {6, 3, 19}, {5, 3, 18}, {4, 3, 16}, {4, 3, 17}, {5, 3, 19}, {4, 4, 18}, {6, 4, 16}, {78, 233, 207}, {82, 230, 209}, {88, 184, 98}, {83, 229, 207}, {91, 169, 123}, {85, 203, 130}, {86, 218, 192}, {83, 231, 209}, {6, 4, 18}, {6, 3, 18}, {5, 4, 18}, {5, 3, 17}, {4, 3, 19}, {4, 2, 18}, {4, 3, 17}, {4, 3, 17}, {5, 3, 18}, {5, 4, 18}, {5, 3, 17}, {5, 4, 17}, {4, 3, 18}}, {{15, 7, 19}, {14, 6, 17}, {14, 8, 19}, {14, 7, 19}, {14, 6, 19}, {15, 8, 19}, {14, 7, 18}, {15, 7, 19}, {15, 6, 18}, {146, 234, 122}, {108, 202, 43}, {29, 20, 18}, {153, 162, 50}, {116, 232, 103}, {176, 255, 114}, {120, 232, 102}, {122, 177, 13}, {125, 155, 2}, {127, 112, 2}, {14, 5, 18}, {15, 5, 21}, {120, 242, 29}, {15, 8, 19}, {16, 7, 19}, {14, 6, 19}, {14, 6, 18}, {15, 7, 17}, {13, 6, 19}, {15, 7, 19}, {15, 7, 19}, {14, 7, 19}, {15, 6, 18}, {5, 4, 17}, {4, 4, 17}, {5, 3, 17}, {4, 3, 18}, {5, 3, 17}, {4, 3, 18}, {6, 3, 17}, {5, 3, 17}, {6, 3, 17}, {79, 230, 208}, {81, 229, 208}, {81, 231, 209}, {76, 215, 184}, {83, 193, 97}, {70, 214, 187}, {80, 115, 75}, {81, 186, 153}, {84, 153, 94}, {78, 230, 209}, {86, 230, 208}, {81, 231, 206}, {6, 4, 17}, {5, 4, 18}, {5, 4, 17}, {5, 3, 18}, {4, 3, 17}, {4, 2, 18}, {4, 3, 17}, {5, 2, 19}, {5, 3, 17}, {5, 3, 16}, {4, 4, 17}}, {{15, 7, 18}, {14, 8, 17}, {14, 6, 18}, {15, 7, 17}, {14, 7, 18}, {15, 7, 17}, {15, 6, 19}, {14, 7, 18}, {94, 208, 101}, {168, 239, 110}, {196, 255, 169}, {194, 254, 169}, {151, 148, 3}, {115, 187, 15}, {131, 115, 2}, {126, 146, 4}, {124, 109, 1}, {143, 137, 2}, {17, 7, 20}, {19, 4, 23}, {133, 236, 109}, {113, 215, 52}, {71, 160, 1}, {15, 3, 19}, {15, 6, 20}, {15, 7, 19}, {14, 8, 19}, {14, 6, 19}, {14, 6, 17}, {14, 6, 18}, {14, 6, 19}, {15, 7, 18}, {5, 3, 19}, {4, 2, 18}, {4, 4, 17}, {5, 3, 18}, {5, 3, 18}, {6, 3, 18}, {5, 4, 19}, {5, 2, 18}, {7, 4, 18}, {84, 230, 208}, {84, 213, 185}, {77, 228, 210}, {80, 100, 68}, {72, 77, 54}, {68, 160, 99}, {69, 78, 52}, {70, 78, 54}, {70, 77, 55}, {80, 187, 104}, {85, 230, 208}, {83, 231, 209}, {5, 3, 18}, {5, 2, 18}, {4, 3, 18}, {5, 3, 20}, {6, 4, 18}, {5, 4, 18}, {4, 2, 17}, {5, 3, 18}, {4, 3, 17}, {4, 3, 17}, {5, 3, 18}}, {{14, 6, 18}, {14, 7, 19}, {15, 8, 18}, {14, 6, 18}, {15, 7, 19}, {14, 6, 18}, {83, 93, 8}, {15, 7, 16}, {194, 225, 1}, {142, 241, 127}, {129, 241, 113}, {164, 239, 117}, {143, 138, 1}, {143, 135, 1}, {104, 92, 3}, {128, 114, 2}, {123, 108, 2}, {15, 7, 19}, {130, 187, 1}, {184, 240, 76}, {202, 255, 87}, {127, 170, 1}, {199, 254, 120}, {16, 5, 22}, {19, 7, 22}, {14, 6, 19}, {15, 7, 19}, {14, 7, 20}, {14, 7, 18}, {14, 7, 18}, {14, 7, 19}, {15, 8, 17}, {6, 2, 17}, {4, 3, 17}, {5, 3, 17}, {5, 2, 19}, {6, 4, 17}, {6, 3, 18}, {4, 2, 17}, {5, 2, 16}, {85, 230, 207}, {82, 231, 208}, {93, 197, 132}, {78, 91, 67}, {70, 151, 96}, {72, 78, 54}, {72, 77, 53}, {70, 80, 56}, {70, 143, 93}, {73, 79, 53}, {77, 89, 68}, {74, 235, 211}, {85, 231, 209}, {75, 231, 205}, {5, 4, 18}, {5, 3, 18}, {6, 3, 17}, {4, 3, 17}, {4, 2, 18}, {4, 4, 18}, {5, 2, 17}, {5, 2, 17}, {5, 2, 16}, {5, 3, 18}}, {{15, 7, 19}, {14, 6, 18}, {14, 7, 18}, {14, 7, 19}, {15, 6, 18}, {15, 6, 18}, {16, 7, 19}, {105, 218, 78}, {108, 227, 47}, {144, 136, 2}, {116, 184, 12}, {120, 169, 6}, {111, 208, 28}, {13, 6, 21}, {14, 9, 20}, {15, 7, 22}, {14, 5, 21}, {178, 219, 1}, {124, 197, 34}, {159, 253, 145}, {170, 198, 2}, {139, 144, 4}, {163, 147, 7}, {182, 254, 155}, {47, 74, 45}, {14, 6, 19}, {14, 6, 19}, {14, 7, 19}, {15, 6, 19}, {13, 7, 19}, {15, 7, 17}, {14, 6, 19}, {4, 3, 17}, {5, 3, 16}, {5, 3, 17}, {6, 3, 19}, {5, 3, 19}, {5, 4, 17}, {4, 3, 18}, {5, 4, 17}, {74, 234, 208}, {72, 230, 213}, {75, 187, 107}, {74, 84, 56}, {81, 134, 181}, {70, 78, 51}, {70, 78, 53}, {68, 82, 56}, {71, 79, 50}, {74, 79, 51}, {75, 154, 92}, {72, 193, 109}, {82, 99, 63}, {79, 230, 208}, {75, 234, 209}, {4, 3, 17}, {5, 3, 18}, {5, 2, 19}, {5, 3, 19}, {5, 3, 17}, {6, 3, 18}, {4, 2, 18}, {5, 2, 16}, {4, 3, 16}}, {{15, 6, 19}, {14, 6, 18}, {15, 7, 19}, {15, 7, 18}, {15, 7, 19}, {217, 254, 0}, {217, 250, 1}, {146, 162, 0}, {68, 53, 10}, {135, 148, 2}, {143, 238, 20}, {142, 133, 2}, {18, 9, 26}, {13, 6, 20}, {14, 7, 19}, {15, 7, 20}, {14, 6, 20}, {14, 6, 21}, {142, 141, 1}, {141, 131, 0}, {142, 132, 2}, {141, 132, 1}, {122, 172, 12}, {144, 138, 1}, {111, 188, 23}, {209, 238, 1}, {214, 243, 0}, {13, 6, 18}, {14, 6, 18}, {14, 8, 18}, {14, 6, 19}, {15, 8, 18}, {4, 4, 17}, {4, 3, 18}, {5, 3, 18}, {5, 3, 18}, {4, 3, 18}, {5, 3, 18}, {6, 3, 17}, {6, 3, 18}, {72, 229, 207}, {72, 231, 205}, {72, 142, 91}, {73, 82, 53}, {69, 221, 200}, {5, 4, 18}, {5, 2, 18}, {5, 3, 18}, {70, 79, 52}, {73, 79, 50}, {69, 77, 51}, {75, 86, 61}, {79, 209, 141}, {81, 230, 208}, {74, 234, 208}, {4, 3, 18}, {5, 4, 18}, {5, 3, 16}, {5, 2, 19}, {5, 3, 19}, {5, 3, 17}, {4, 2, 18}, {5, 3, 17}, {4, 3, 17}}, {{14, 7, 19}, {15, 7, 19}, {15, 7, 19}, {15, 7, 19}, {178, 250, 60}, {188, 255, 158}, {135, 237, 125}, {142, 242, 131}, {125, 178, 17}, {133, 119, 3}, {143, 133, 2}, {136, 122, 0}, {85, 75, 8}, {99, 94, 13}, {14, 7, 20}, {15, 9, 19}, {14, 6, 20}, {15, 6, 20}, {122, 193, 20}, {139, 128, 1}, {139, 129, 1}, {110, 97, 2}, {140, 135, 1}, {143, 143, 3}, {96, 222, 69}, {123, 232, 104}, {167, 251, 147}, {216, 251, 2}, {15, 6, 18}, {13, 7, 19}, {15, 7, 19}, {15, 5, 18}, {5, 3, 16}, {5, 3, 17}, {5, 4, 18}, {4, 2, 19}, {5, 3, 19}, {4, 3, 16}, {5, 3, 18}, {5, 2, 18}, {93, 150, 67}, {91, 97, 61}, {73, 229, 206}, {70, 78, 51}, {66, 224, 198}, {5, 2, 17}, {6, 4, 17}, {6, 4, 17}, {77, 172, 174}, {69, 78, 51}, {68, 77, 52}, {69, 75, 51}, {70, 76, 53}, {84, 220, 186}, {65, 235, 208}, {5, 3, 18}, {4, 3, 17}, {5, 3, 18}, {4, 4, 17}, {5, 4, 18}, {3, 3, 16}, {6, 3, 17}, {6, 3, 16}, {4, 3, 16}}, {{15, 5, 18}, {16, 7, 19}, {15, 7, 18}, {211, 252, 2}, {125, 234, 108}, {131, 175, 10}, {137, 183, 25}, {121, 185, 14}, {122, 183, 15}, {121, 107, 2}, {121, 106, 1}, {13, 6, 21}, {14, 7, 19}, {110, 99, 4}, {167, 197, 2}, {16, 7, 19}, {14, 5, 21}, {38, 37, 18}, {137, 123, 0}, {14, 5, 21}, {125, 112, 1}, {125, 112, 1}, {101, 86, 1}, {129, 114, 2}, {127, 112, 3}, {128, 178, 6}, {161, 219, 10}, {116, 219, 65}, {65, 90, 51}, {14, 7, 19}, {15, 7, 18}, {14, 7, 19}, {5, 4, 15}, {4, 3, 19}, {5, 4, 19}, {4, 2, 17}, {6, 3, 17}, {6, 3, 17}, {5, 3, 18}, {6, 3, 19}, {64, 63, 48}, {76, 186, 103}, {82, 104, 70}, {70, 77, 54}, {87, 110, 141}, {4, 2, 18}, {46, 65, 77}, {79, 135, 135}, {70, 76, 50}, {69, 78, 52}, {69, 78, 54}, {69, 77, 53}, {70, 75, 53}, {72, 173, 114}, {55, 236, 209}, {5, 3, 18}, {5, 4, 18}, {6, 3, 19}, {5, 3, 16}, {5, 3, 17}, {6, 4, 18}, {4, 2, 19}, {5, 3, 18}, {5, 2, 17}}, {{15, 8, 18}, {15, 6, 19}, {14, 7, 20}, {207, 245, 0}, {123, 184, 12}, {120, 183, 12}, {130, 172, 8}, {123, 184, 14}, {132, 119, 3}, {15, 7, 20}, {122, 108, 1}, {26, 20, 18}, {13, 6, 18}, {14, 6, 20}, {54, 48, 8}, {213, 254, 1}, {161, 184, 4}, {61, 67, 15}, {14, 7, 19}, {13, 6, 19}, {125, 111, 1}, {85, 75, 7}, {122, 111, 2}, {124, 112, 1}, {124, 110, 3}, {122, 107, 1}, {123, 168, 11}, {122, 186, 10}, {51, 72, 16}, {14, 6, 18}, {14, 7, 18}, {15, 7, 19}, {5, 4, 17}, {5, 4, 19}, {37, 230, 201}, {46, 231, 198}, {83, 231, 208}, {84, 229, 209}, {82, 231, 208}, {74, 233, 209}, {5, 4, 19}, {71, 78, 54}, {70, 78, 53}, {70, 79, 52}, {70, 80, 53}, {91, 119, 148}, {83, 123, 166}, {81, 125, 160}, {70, 79, 50}, {71, 78, 51}, {71, 77, 51}, {94, 79, 72}, {71, 154, 96}, {73, 82, 54}, {6, 4, 17}, {6, 2, 17}, {5, 3, 18}, {5, 3, 18}, {6, 4, 18}, {6, 4, 17}, {4, 3, 16}, {5, 4, 19}, {5, 3, 18}, {3, 3, 17}}, {{15, 6, 18}, {15, 6, 18}, {15, 6, 19}, {207, 251, 0}, {15, 6, 18}, {149, 141, 1}, {96, 85, 7}, {107, 94, 2}, {135, 123, 1}, {13, 6, 20}, {13, 6, 21}, {113, 103, 4}, {135, 120, 0}, {149, 144, 1}, {14, 6, 17}, {212, 255, 1}, {111, 99, 2}, {14, 7, 19}, {206, 241, 0}, {125, 113, 1}, {12, 6, 19}, {13, 6, 20}, {14, 6, 18}, {97, 85, 3}, {127, 226, 6}, {14, 6, 21}, {151, 146, 0}, {15, 7, 21}, {151, 168, 7}, {14, 6, 18}, {14, 7, 19}, {15, 7, 18}, {5, 3, 18}, {5, 2, 16}, {84, 230, 207}, {84, 232, 208}, {84, 191, 107}, {85, 230, 209}, {75, 230, 225}, {85, 214, 177}, {83, 232, 209}, {6, 3, 17}, {6, 2, 17}, {4, 2, 17}, {4, 3, 15}, {4, 3, 18}, {78, 95, 84}, {101, 144, 152}, {69, 216, 212}, {76, 208, 198}, {84, 140, 176}, {68, 78, 52}, {69, 78, 53}, {27, 28, 29}, {4, 2, 18}, {5, 3, 17}, {5, 3, 18}, {6, 3, 18}, {5, 4, 17}, {5, 3, 18}, {6, 4, 18}, {5, 3, 18}, {6, 2, 17}, {5, 3, 18}}, {{15, 6, 18}, {15, 6, 18}, {14, 6, 19}, {14, 6, 19}, {14, 5, 19}, {216, 254, 0}, {15, 6, 20}, {92, 81, 7}, {93, 82, 5}, {132, 118, 1}, {150, 174, 7}, {84, 72, 7}, {13, 5, 19}, {14, 7, 20}, {177, 208, 3}, {213, 255, 2}, {134, 124, 2}, {93, 82, 3}, {13, 5, 19}, {14, 5, 20}, {13, 7, 19}, {15, 10, 15}, {137, 127, 2}, {91, 77, 6}, {26, 18, 17}, {126, 137, 1}, {170, 212, 1}, {14, 6, 19}, {15, 7, 19}, {13, 7, 18}, {15, 6, 19}, {15, 7, 20}, {5, 3, 17}, {82, 229, 208}, {96, 144, 104}, {88, 188, 107}, {83, 155, 115}, {83, 220, 181}, {85, 177, 108}, {71, 225, 205}, {72, 102, 78}, {86, 232, 210}, {65, 196, 177}, {5, 2, 17}, {5, 4, 16}, {5, 2, 17}, {5, 4, 20}, {74, 219, 197}, {78, 116, 75}, {67, 77, 51}, {67, 78, 52}, {68, 76, 52}, {68, 76, 51}, {4, 3, 19}, {5, 3, 17}, {5, 3, 20}, {5, 3, 18}, {5, 3, 18}, {6, 3, 17}, {6, 4, 18}, {4, 3, 17}, {5, 2, 17}, {5, 2, 17}, {5, 2, 18}}, {{15, 7, 18}, {15, 7, 20}, {14, 6, 20}, {15, 7, 18}, {15, 6, 19}, {13, 5, 20}, {13, 7, 20}, {15, 7, 18}, {14, 6, 19}, {129, 114, 0}, {14, 6, 18}, {19, 12, 18}, {15, 7, 18}, {14, 6, 20}, {218, 255, 3}, {143, 131, 2}, {133, 121, 1}, {99, 87, 3}, {14, 6, 19}, {13, 6, 19}, {146, 138, 0}, {145, 135, 0}, {15, 6, 20}, {14, 6, 19}, {14, 7, 19}, {188, 239, 1}, {14, 6, 18}, {13, 6, 19}, {29, 25, 15}, {14, 6, 18}, {13, 6, 19}, {14, 7, 19}, {4, 3, 17}, {78, 108, 69}, {81, 231, 209}, {84, 188, 103}, {76, 225, 198}, {72, 77, 53}, {72, 78, 52}, {73, 195, 123}, {69, 80, 53}, {83, 97, 76}, {64, 195, 178}, {4, 3, 17}, {4, 3, 17}, {5, 2, 19}, {6, 4, 19}, {86, 125, 178}, {84, 186, 181}, {4, 3, 18}, {5, 3, 19}, {5, 3, 17}, {4, 3, 16}, {5, 2, 18}, {5, 2, 19}, {7, 3, 18}, {6, 3, 19}, {8, 22, 30}, {11, 22, 32}, {4, 3, 18}, {4, 3, 18}, {5, 3, 19}, {6, 3, 18}, {4, 4, 18}}, {{14, 6, 18}, {14, 6, 18}, {218, 255, 1}, {15, 7, 18}, {14, 7, 19}, {174, 212, 1}, {15, 7, 19}, {14, 7, 20}, {196, 240, 1}, {49, 46, 11}, {14, 5, 19}, {162, 189, 6}, {215, 254, 0}, {127, 128, 6}, {176, 189, 0}, {212, 255, 1}, {103, 89, 3}, {103, 90, 2}, {128, 114, 2}, {131, 117, 1}, {86, 76, 7}, {14, 5, 19}, {14, 6, 19}, {15, 8, 20}, {15, 6, 18}, {14, 6, 20}, {179, 214, 0}, {14, 6, 19}, {45, 43, 15}, {15, 6, 18}, {14, 7, 18}, {16, 7, 18}, {4, 3, 19}, {71, 79, 53}, {79, 178, 108}, {74, 82, 56}, {73, 78, 54}, {70, 77, 53}, {71, 174, 107}, {70, 78, 53}, {75, 84, 76}, {72, 221, 184}, {74, 115, 150}, {5, 3, 17}, {5, 2, 17}, {4, 4, 18}, {5, 4, 19}, {72, 79, 53}, {80, 228, 192}, {6, 3, 19}, {6, 2, 19}, {4, 4, 19}, {5, 3, 17}, {4, 3, 18}, {6, 4, 18}, {83, 230, 208}, {85, 231, 208}, {79, 232, 211}, {86, 231, 209}, {6, 3, 19}, {5, 3, 18}, {5, 3, 17}, {6, 4, 17}, {5, 2, 17}}, {{15, 7, 19}, {15, 8, 18}, {219, 255, 5}, {14, 6, 19}, {14, 5, 19}, {14, 6, 18}, {15, 7, 18}, {14, 6, 19}, {200, 241, 1}, {78, 64, 2}, {14, 6, 19}, {14, 7, 20}, {14, 6, 19}, {15, 6, 19}, {213, 254, 3}, {193, 255, 110}, {128, 115, 2}, {121, 108, 1}, {14, 7, 18}, {14, 7, 19}, {15, 6, 18}, {14, 6, 19}, {15, 6, 19}, {14, 6, 18}, {15, 6, 19}, {14, 7, 19}, {15, 6, 20}, {14, 6, 19}, {43, 41, 19}, {13, 7, 19}, {13, 6, 18}, {15, 7, 19}, {4, 3, 18}, {4, 3, 17}, {68, 80, 50}, {70, 83, 54}, {93, 157, 146}, {80, 111, 138}, {72, 79, 52}, {77, 85, 58}, {76, 220, 205}, {68, 79, 97}, {5, 4, 18}, {5, 3, 17}, {5, 2, 17}, {4, 4, 18}, {5, 3, 19}, {71, 81, 52}, {81, 228, 201}, {5, 2, 17}, {4, 2, 17}, {6, 3, 17}, {4, 3, 18}, {6, 4, 17}, {6, 1, 18}, {86, 139, 79}, {95, 174, 98}, {87, 184, 98}, {83, 231, 208}, {83, 231, 210}, {4, 4, 16}, {5, 2, 17}, {4, 4, 17}, {5, 3, 18}}, {{14, 6, 19}, {15, 6, 17}, {14, 6, 18}, {15, 7, 19}, {14, 6, 19}, {13, 6, 19}, {15, 6, 18}, {15, 7, 18}, {201, 240, 1}, {14, 6, 19}, {14, 6, 20}, {14, 6, 19}, {14, 7, 19}, {14, 6, 18}, {217, 255, 1}, {141, 128, 1}, {128, 114, 1}, {121, 109, 2}, {14, 7, 19}, {14, 6, 18}, {13, 6, 19}, {15, 7, 19}, {14, 6, 19}, {14, 6, 18}, {14, 5, 19}, {14, 6, 19}, {14, 5, 18}, {14, 6, 20}, {12, 7, 18}, {14, 6, 18}, {13, 5, 18}, {15, 7, 19}, {4, 3, 18}, {5, 3, 17}, {6, 3, 18}, {5, 1, 17}, {71, 84, 52}, {79, 88, 56}, {89, 107, 147}, {80, 101, 101}, {74, 125, 166}, {79, 85, 54}, {65, 194, 176}, {5, 3, 17}, {4, 3, 18}, {4, 2, 18}, {6, 3, 19}, {79, 133, 164}, {83, 230, 203}, {4, 2, 18}, {5, 4, 18}, {6, 4, 19}, {4, 3, 17}, {6, 3, 18}, {83, 230, 208}, {87, 139, 91}, {78, 194, 101}, {80, 189, 100}, {85, 208, 151}, {84, 230, 209}, {86, 232, 208}, {4, 3, 17}, {4, 3, 16}, {5, 3, 18}}, {{14, 6, 18}, {14, 6, 19}, {14, 6, 19}, {16, 8, 19}, {14, 7, 18}, {13, 6, 17}, {40, 39, 18}, {14, 7, 18}, {14, 6, 20}, {14, 6, 18}, {14, 6, 18}, {14, 5, 21}, {14, 6, 19}, {15, 6, 19}, {197, 221, 4}, {155, 250, 153}, {128, 115, 1}, {121, 111, 0}, {14, 6, 19}, {14, 5, 19}, {204, 241, 1}, {14, 7, 18}, {14, 6, 20}, {15, 7, 18}, {15, 6, 18}, {15, 6, 19}, {13, 6, 18}, {14, 6, 20}, {14, 7, 19}, {14, 6, 18}, {15, 6, 18}, {13, 7, 18}, {4, 3, 17}, {5, 4, 18}, {4, 3, 16}, {5, 3, 17}, {4, 2, 18}, {5, 3, 18}, {5, 3, 18}, {5, 4, 21}, {4, 4, 18}, {76, 85, 53}, {62, 96, 134}, {4, 2, 17}, {4, 3, 17}, {5, 2, 17}, {69, 79, 52}, {69, 78, 50}, {81, 134, 176}, {4, 4, 18}, {4, 3, 18}, {5, 2, 17}, {6, 2, 18}, {5, 4, 17}, {104, 155, 90}, {92, 99, 65}, {81, 94, 72}, {70, 78, 53}, {83, 131, 66}, {82, 230, 210}, {84, 231, 208}, {5, 4, 18}, {5, 3, 16}, {4, 4, 18}}, {{14, 7, 17}, {13, 6, 17}, {15, 6, 19}, {14, 7, 18}, {14, 7, 17}, {14, 7, 19}, {40, 38, 15}, {13, 6, 18}, {13, 7, 19}, {13, 6, 19}, {14, 7, 18}, {41, 43, 15}, {16, 7, 19}, {15, 7, 18}, {179, 212, 5}, {213, 252, 2}, {134, 122, 2}, {92, 82, 2}, {14, 6, 18}, {14, 6, 19}, {202, 241, 1}, {15, 7, 19}, {13, 7, 19}, {14, 7, 18}, {15, 8, 19}, {14, 6, 20}, {14, 5, 19}, {14, 7, 20}, {14, 6, 19}, {14, 6, 18}, {14, 6, 19}, {14, 6, 18}, {4, 1, 18}, {5, 4, 16}, {5, 2, 18}, {5, 3, 17}, {4, 4, 19}, {5, 4, 19}, {4, 3, 17}, {5, 3, 17}, {5, 3, 17}, {27, 41, 33}, {76, 119, 91}, {76, 227, 184}, {6, 3, 17}, {5, 4, 17}, {5, 3, 19}, {81, 122, 157}, {77, 226, 199}, {4, 3, 17}, {6, 3, 18}, {5, 2, 18}, {5, 3, 18}, {72, 78, 50}, {71, 77, 53}, {69, 77, 53}, {68, 216, 136}, {74, 98, 62}, {66, 146, 89}, {83, 190, 87}, {83, 233, 210}, {4, 3, 17}, {5, 4, 17}, {4, 4, 17}}, {{15, 7, 19}, {14, 7, 19}, {15, 8, 18}, {14, 6, 19}, {14, 6, 19}, {14, 5, 19}, {13, 6, 20}, {14, 7, 18}, {14, 6, 19}, {15, 6, 18}, {14, 5, 18}, {14, 7, 20}, {216, 252, 1}, {14, 7, 20}, {179, 213, 4}, {212, 254, 1}, {134, 119, 3}, {91, 80, 4}, {14, 6, 19}, {216, 249, 1}, {14, 6, 19}, {14, 6, 18}, {14, 6, 18}, {15, 7, 20}, {14, 7, 20}, {15, 6, 19}, {15, 6, 19}, {14, 6, 18}, {14, 7, 18}, {15, 6, 19}, {15, 7, 19}, {14, 6, 18}, {5, 4, 18}, {4, 2, 16}, {5, 2, 18}, {5, 3, 17}, {5, 2, 17}, {5, 3, 18}, {5, 3, 17}, {5, 3, 18}, {4, 2, 17}, {4, 3, 17}, {48, 54, 48}, {69, 79, 49}, {83, 158, 180}, {80, 137, 192}, {68, 195, 175}, {70, 79, 51}, {78, 224, 196}, {5, 2, 18}, {83, 163, 194}, {78, 117, 105}, {82, 190, 186}, {69, 196, 176}, {67, 172, 219}, {68, 78, 53}, {68, 78, 52}, {69, 78, 52}, {69, 77, 52}, {68, 214, 190}, {5, 3, 17}, {6, 4, 19}, {4, 3, 18}, {4, 4, 18}}, {{14, 6, 18}, {14, 7, 18}, {14, 6, 20}, {14, 6, 19}, {14, 6, 18}, {13, 7, 19}, {13, 6, 18}, {13, 6, 18}, {191, 228, 0}, {13, 6, 18}, {15, 7, 18}, {14, 6, 19}, {14, 6, 20}, {13, 7, 19}, {212, 255, 1}, {210, 255, 1}, {134, 120, 3}, {86, 75, 4}, {15, 7, 19}, {14, 7, 19}, {15, 7, 18}, {14, 7, 18}, {15, 5, 18}, {17, 8, 18}, {14, 6, 19}, {170, 208, 0}, {15, 6, 18}, {15, 7, 19}, {15, 6, 19}, {15, 7, 20}, {15, 7, 19}, {14, 7, 19}, {5, 2, 18}, {4, 3, 17}, {5, 4, 18}, {5, 2, 18}, {5, 3, 17}, {5, 3, 19}, {4, 3, 17}, {4, 2, 16}, {82, 231, 205}, {4, 3, 16}, {83, 233, 208}, {4, 2, 16}, {68, 75, 47}, {70, 75, 48}, {70, 74, 47}, {71, 79, 51}, {79, 139, 175}, {85, 107, 116}, {73, 74, 47}, {5, 2, 18}, {5, 3, 18}, {4, 2, 18}, {4, 3, 18}, {5, 3, 19}, {6, 4, 19}, {5, 4, 20}, {6, 3, 20}, {5, 3, 19}, {6, 3, 18}, {4, 2, 16}, {4, 3, 17}, {5, 3, 17}}, {{15, 7, 18}, {15, 7, 19}, {14, 6, 19}, {13, 7, 18}, {15, 7, 18}, {14, 7, 17}, {14, 6, 18}, {14, 8, 18}, {191, 228, 1}, {14, 7, 18}, {15, 6, 19}, {13, 7, 18}, {14, 6, 18}, {15, 8, 19}, {216, 255, 0}, {149, 134, 4}, {134, 118, 2}, {83, 71, 6}, {14, 7, 19}, {15, 7, 19}, {14, 7, 19}, {14, 6, 19}, {14, 7, 19}, {14, 6, 17}, {13, 6, 18}, {14, 6, 19}, {14, 7, 19}, {14, 6, 19}, {14, 6, 19}, {14, 6, 18}, {14, 5, 18}, {15, 7, 18}, {4, 3, 18}, {4, 3, 17}, {6, 3, 18}, {6, 4, 19}, {5, 3, 17}, {6, 2, 17}, {4, 3, 18}, {17, 39, 44}, {100, 184, 96}, {89, 183, 89}, {85, 231, 209}, {19, 62, 64}, {4, 2, 16}, {4, 3, 17}, {4, 2, 19}, {79, 121, 157}, {79, 124, 164}, {72, 80, 45}, {4, 3, 16}, {5, 3, 17}, {4, 3, 17}, {5, 4, 18}, {4, 4, 18}, {5, 3, 18}, {5, 2, 18}, {5, 2, 17}, {4, 3, 19}, {4, 3, 17}, {5, 4, 18}, {4, 1, 17}, {6, 3, 17}, {4, 3, 17}}, {{14, 7, 19}, {14, 7, 18}, {15, 7, 19}, {14, 6, 18}, {15, 6, 19}, {14, 6, 20}, {14, 7, 18}, {14, 6, 18}, {189, 231, 0}, {14, 6, 19}, {15, 7, 20}, {15, 6, 19}, {15, 6, 19}, {14, 6, 19}, {219, 255, 1}, {215, 255, 1}, {132, 118, 1}, {110, 101, 5}, {14, 5, 20}, {15, 6, 19}, {14, 6, 19}, {14, 6, 19}, {14, 6, 18}, {14, 7, 17}, {14, 7, 20}, {14, 7, 19}, {15, 6, 19}, {14, 6, 17}, {13, 6, 18}, {14, 7, 19}, {15, 6, 18}, {15, 7, 19}, {4, 2, 16}, {5, 4, 17}, {5, 3, 16}, {5, 3, 17}, {5, 3, 18}, {5, 3, 17}, {3, 3, 16}, {72, 78, 50}, {79, 113, 67}, {80, 186, 96}, {87, 114, 75}, {75, 108, 65}, {5, 3, 17}, {4, 3, 18}, {69, 79, 53}, {69, 78, 53}, {76, 122, 164}, {69, 80, 51}, {4, 4, 17}, {4, 3, 17}, {5, 3, 17}, {5, 2, 18}, {6, 3, 17}, {5, 4, 18}, {6, 4, 18}, {5, 4, 17}, {5, 4, 18}, {5, 3, 18}, {5, 3, 16}, {5, 3, 16}, {4, 3, 18}, {4, 4, 17}}, {{14, 6, 18}, {14, 7, 18}, {14, 6, 18}, {13, 7, 19}, {15, 8, 19}, {14, 7, 17}, {14, 6, 19}, {16, 7, 19}, {15, 7, 19}, {14, 7, 19}, {211, 254, 0}, {14, 7, 18}, {15, 7, 20}, {15, 6, 19}, {215, 254, 1}, {213, 255, 2}, {128, 114, 2}, {99, 86, 2}, {14, 7, 19}, {14, 7, 19}, {15, 6, 18}, {216, 252, 1}, {14, 6, 18}, {215, 255, 0}, {13, 6, 18}, {15, 6, 19}, {14, 7, 18}, {15, 6, 19}, {13, 7, 18}, {14, 8, 19}, {14, 6, 19}, {15, 6, 18}, {5, 4, 17}, {6, 3, 18}, {4, 4, 18}, {5, 4, 17}, {5, 3, 18}, {6, 3, 18}, {5, 4, 18}, {71, 81, 54}, {69, 76, 51}, {79, 119, 86}, {69, 77, 53}, {68, 76, 52}, {5, 3, 17}, {5, 3, 17}, {69, 78, 54}, {69, 78, 53}, {69, 78, 52}, {68, 78, 53}, {5, 3, 17}, {5, 3, 18}, {4, 3, 18}, {5, 3, 17}, {4, 3, 17}, {4, 4, 17}, {4, 4, 18}, {5, 2, 18}, {5, 4, 17}, {5, 2, 18}, {5, 2, 17}, {6, 4, 16}, {5, 4, 17}, {5, 3, 17}}, {{15, 6, 18}, {14, 7, 19}, {15, 6, 19}, {14, 6, 18}, {13, 6, 18}, {172, 202, 8}, {14, 6, 19}, {14, 7, 18}, {14, 6, 19}, {14, 6, 20}, {211, 251, 1}, {14, 6, 19}, {15, 7, 19}, {15, 6, 20}, {190, 212, 2}, {144, 134, 3}, {125, 111, 1}, {80, 73, 4}, {14, 6, 19}, {14, 6, 18}, {14, 6, 20}, {215, 252, 2}, {14, 7, 19}, {217, 255, 0}, {14, 7, 18}, {15, 7, 20}, {210, 253, 0}, {14, 8, 18}, {14, 6, 18}, {14, 6, 18}, {15, 6, 18}, {15, 6, 19}, {6, 4, 18}, {5, 4, 18}, {6, 4, 18}, {6, 4, 18}, {6, 3, 18}, {4, 3, 17}, {6, 4, 16}, {5, 3, 18}, {4, 3, 18}, {4, 3, 18}, {6, 3, 18}, {4, 2, 17}, {5, 2, 17}, {5, 3, 18}, {4, 3, 19}, {4, 3, 18}, {5, 4, 18}, {6, 3, 18}, {5, 2, 17}, {4, 3, 17}, {5, 4, 17}, {5, 3, 17}, {4, 4, 17}, {5, 3, 18}, {4, 2, 17}, {4, 3, 17}, {4, 4, 16}, {4, 3, 18}, {4, 2, 17}, {4, 2, 16}, {6, 2, 16}, {5, 3, 17}}, {{15, 6, 19}, {14, 7, 19}, {15, 7, 19}, {15, 6, 19}, {14, 6, 19}, {14, 7, 19}, {14, 7, 18}, {15, 7, 20}, {14, 6, 19}, {13, 6, 18}, {16, 6, 19}, {14, 7, 19}, {15, 7, 18}, {15, 7, 19}, {200, 246, 13}, {153, 151, 0}, {126, 112, 1}, {89, 78, 4}, {15, 7, 19}, {15, 6, 19}, {13, 6, 19}, {14, 6, 19}, {14, 7, 19}, {219, 255, 1}, {14, 7, 18}, {14, 6, 19}, {14, 6, 18}, {15, 7, 19}, {14, 6, 18}, {15, 7, 18}, {14, 7, 18}, {14, 7, 18}, {4, 4, 19}, {5, 2, 17}, {5, 3, 16}, {6, 4, 17}, {5, 3, 17}, {5, 3, 16}, {5, 3, 17}, {4, 3, 17}, {5, 3, 17}, {6, 3, 17}, {5, 3, 18}, {5, 3, 18}, {5, 3, 17}, {4, 2, 17}, {5, 4, 17}, {5, 3, 18}, {5, 3, 18}, {5, 3, 19}, {4, 3, 17}, {6, 3, 17}, {5, 3, 17}, {5, 3, 18}, {5, 2, 17}, {5, 2, 17}, {5, 4, 19}, {7, 3, 18}, {6, 3, 17}, {5, 4, 17}, {5, 3, 17}, {6, 3, 17}, {5, 2, 18}, {4, 3, 17}}, {{14, 7, 18}, {14, 7, 18}, {14, 6, 19}, {15, 7, 19}, {15, 6, 19}, {14, 6, 18}, {15, 7, 19}, {15, 7, 20}, {15, 8, 18}, {17, 8, 18}, {15, 6, 20}, {15, 7, 18}, {15, 6, 20}, {212, 255, 3}, {145, 132, 1}, {144, 133, 1}, {142, 133, 2}, {127, 116, 2}, {14, 7, 18}, {15, 7, 19}, {15, 7, 19}, {26, 23, 19}, {15, 6, 19}, {15, 5, 18}, {14, 6, 19}, {14, 6, 19}, {13, 6, 19}, {15, 6, 19}, {15, 7, 18}, {14, 6, 19}, {15, 6, 18}, {15, 7, 18}, {5, 3, 17}, {5, 3, 16}, {6, 3, 18}, {5, 3, 17}, {5, 4, 16}, {4, 2, 16}, {5, 3, 17}, {4, 2, 17}, {5, 3, 17}, {6, 2, 18}, {6, 4, 17}, {4, 3, 17}, {4, 2, 16}, {4, 3, 17}, {4, 4, 17}, {4, 3, 17}, {6, 3, 17}, {6, 3, 17}, {7, 3, 17}, {5, 4, 15}, {6, 2, 18}, {5, 2, 17}, {5, 3, 16}, {6, 3, 17}, {5, 3, 16}, {5, 4, 16}, {5, 4, 18}, {4, 2, 17}, {4, 2, 17}, {4, 2, 16}, {5, 2, 18}, {4, 4, 16}}, {{14, 6, 19}, {15, 7, 18}, {14, 7, 18}, {15, 7, 18}, {15, 7, 19}, {15, 7, 18}, {13, 7, 18}, {14, 7, 20}, {14, 6, 18}, {206, 248, 1}, {16, 6, 19}, {83, 92, 14}, {162, 178, 3}, {121, 180, 1}, {127, 148, 53}, {113, 97, 3}, {138, 126, 3}, {137, 126, 3}, {138, 155, 2}, {142, 146, 3}, {14, 9, 20}, {39, 36, 17}, {51, 46, 12}, {13, 6, 19}, {15, 6, 18}, {14, 7, 19}, {14, 8, 19}, {13, 7, 19}, {15, 6, 19}, {14, 5, 17}, {14, 7, 19}, {14, 6, 19}, {5, 2, 16}, {4, 3, 17}, {4, 2, 17}, {4, 3, 17}, {4, 3, 17}, {5, 2, 17}, {5, 3, 18}, {5, 4, 18}, {5, 3, 17}, {5, 4, 16}, {5, 3, 18}, {5, 3, 18}, {4, 3, 18}, {5, 4, 18}, {4, 2, 16}, {4, 3, 18}, {5, 3, 17}, {4, 2, 16}, {5, 2, 16}, {5, 4, 18}, {6, 3, 18}, {4, 3, 16}, {4, 4, 18}, {5, 3, 17}, {5, 4, 16}, {6, 2, 18}, {4, 4, 17}, {4, 1, 17}, {4, 4, 17}, {5, 3, 17}, {4, 3, 17}, {4, 2, 17}}, {{14, 6, 17}, {14, 6, 18}, {13, 6, 19}, {15, 6, 20}, {14, 7, 19}, {147, 137, 3}, {158, 147, 1}, {158, 189, 2}, {158, 160, 1}, {129, 173, 1}, {158, 171, 0}, {158, 164, 1}, {165, 173, 1}, {115, 101, 2}, {116, 101, 0}, {115, 102, 1}, {114, 100, 1}, {114, 100, 3}, {116, 99, 2}, {136, 180, 3}, {141, 177, 1}, {133, 123, 1}, {135, 124, 1}, {140, 131, 0}, {141, 136, 1}, {193, 239, 0}, {15, 7, 18}, {15, 7, 17}, {14, 7, 19}, {14, 7, 18}, {14, 7, 19}, {14, 7, 19}, {6, 3, 17}, {5, 4, 18}, {5, 2, 17}, {4, 3, 16}, {4, 3, 17}, {4, 2, 17}, {5, 3, 17}, {5, 2, 16}, {5, 4, 17}, {4, 4, 19}, {5, 2, 18}, {5, 3, 16}, {4, 2, 18}, {4, 2, 17}, {5, 3, 16}, {4, 4, 17}, {5, 3, 16}, {5, 4, 17}, {5, 3, 17}, {6, 3, 18}, {5, 4, 16}, {5, 3, 19}, {4, 2, 19}, {6, 4, 19}, {5, 4, 17}, {5, 3, 19}, {5, 3, 18}, {4, 3, 17}, {5, 3, 18}, {4, 2, 18}, {5, 3, 17}, {4, 3, 15}}};
#include <SPI.h>
#include <WiFi.h>
#include <WiFiUdp.h>
#include <WiFiNINA.h>
#include <RGBmatrixPanel.h>

#if defined(ADAFRUIT_FEATHER_M4_EXPRESS) || \
  defined(ADAFRUIT_FEATHER_M0_EXPRESS) || \
  defined(ADAFRUIT_FEATHER_M0) || \
  defined(ARDUINO_AVR_FEATHER32U4) || \
  defined(ARDUINO_NRF52840_FEATHER) || \
  defined(ADAFRUIT_ITSYBITSY_M0) || \
  defined(ADAFRUIT_ITSYBITSY_M4_EXPRESS) || \
  defined(ARDUINO_AVR_ITSYBITSY32U4_3V) || \
  defined(ARDUINO_NRF52_ITSYBITSY)
  // Configure the pins used for the ESP32 connection
  #define SPIWIFI       SPI  // The SPI port
  #define SPIWIFI_SS    13   // Chip select pin
  #define ESP32_RESETN  12   // Reset pin
  #define SPIWIFI_ACK   11   // a.k.a BUSY or READY pin
  #define ESP32_GPIO0   -1
#elif defined(ARDUINO_AVR_FEATHER328P)
  #define SPIWIFI       SPI  // The SPI port
  #define SPIWIFI_SS     4   // Chip select pin
  #define ESP32_RESETN   3   // Reset pin
  #define SPIWIFI_ACK    2   // a.k.a BUSY or READY pin
  #define ESP32_GPIO0   -1
#elif defined(TEENSYDUINO)
  #define SPIWIFI       SPI  // The SPI port
  #define SPIWIFI_SS     5   // Chip select pin
  #define ESP32_RESETN   6   // Reset pin
  #define SPIWIFI_ACK    9   // a.k.a BUSY or READY pin
  #define ESP32_GPIO0   -1
#elif defined(ARDUINO_NRF52832_FEATHER )
  #define SPIWIFI       SPI  // The SPI port
  #define SPIWIFI_SS    16   // Chip select pin
  #define ESP32_RESETN  15   // Reset pin
  #define SPIWIFI_ACK    7   // a.k.a BUSY or READY pin
  #define ESP32_GPIO0   -1
#elif !defined(SPIWIFI_SS)   // if the wifi definition isnt in the board variant
  // Don't change the names of these #define's! they match the variant ones
  #define SPIWIFI       SPI
  #define SPIWIFI_SS    13   // Chip select pin (originally 10, changed to 13)
  #define SPIWIFI_ACK    7   // a.k.a BUSY or READY pin
  #define ESP32_RESETN   5   // Reset pin
  #define ESP32_GPIO0   -1   // Not connected
#endif

// MATRIX PINS
#define CLK 11 // USE THIS ON ARDUINO MEGA
#define OE   9
#define LAT 10
#define A   A0
#define B   A1
#define C   A2
#define D   A3

RGBmatrixPanel matrix(A, B, C, D, CLK, LAT, OE, false, 64);
const int ROWS = 32;
const int COLS = 64;
const int CHANNELS = 3;

void printWifiStatus();
void startupAnimation();


// WIFI STUFF ----

int status = WL_IDLE_STATUS;
#include "arduino_secrets.h" 
///////please enter your sensitive data in the Secret tab/arduino_secrets.h
char ssid[] = SECRET_SSID;        // your network SSID (name)
//char pass[] = SECRET_PASS;    // your network password (use for WPA, or use as key for WEP)
int keyIndex = 0;            // your network key Index number (needed only for WEP)

unsigned int localPort = 2390;      // local port to listen on

char packetBuffer[255]; //buffer to hold incoming packet
char ReplyBuffer[] = "acknowledged";       // a string to send back

// IMAGE STUFF ----
#define IMG_SIZE 192

WiFiUDP Udp;

void setup() {
  //Initialize serial and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }

  matrix.begin();
  // draw a pixel in solid white
  matrix.drawPixel(0, 0, matrix.Color333(7, 7, 7));
  delay(100);

  startupAnimation();
  for (int row = 0; row < 32; row++) {
    for (int col = 0; col < 64; col++) {
    
      uint8_t r = pgm_read_byte(&(surfer_img[row][col][0]));
      uint8_t g =  pgm_read_byte(&(surfer_img[row][col][1]));
      uint8_t b = pgm_read_byte(&(surfer_img[row][col][2]));
      matrix.drawPixel(col, row, matrix.Color888(b, g, r, true));

      Serial.print("Pixel number ");
      Serial.print(row*64 + col + 1);
      Serial.print(": ");
      Serial.print(r);
      Serial.print(" ");
      Serial.print(g);
      Serial.print(" ");
      Serial.print(b);
      Serial.println();
    }
  }

  /*
  WiFi.setPins(SPIWIFI_SS, SPIWIFI_ACK, ESP32_RESETN, ESP32_GPIO0, &SPIWIFI);
  // check for the WiFi module:
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }

  String fv = WiFi.firmwareVersion();
  if (fv < "1.0.0") {
    Serial.println("Please upgrade the firmware");
  }

  // attempt to connect to Wifi network:
  while (status != WL_CONNECTED) {
    Serial.print("Attempting to connect to SSID: ");
    Serial.println(ssid);
    // Connect to WPA/WPA2 network. Change this line if using open or WEP network:
    status = WiFi.begin(ssid);

    // wait 10 seconds for connection:
    delay(10000);
  }
  Serial.println("Connected to wifi");
  printWifiStatus();

  Serial.println("\nStarting connection to server...");
  // if you get a connection, report back via serial:
  Udp.begin(localPort);
  Serial.println("localPort connected.");
  */
}

void loop() {
  /*
  // if there's data available, read a packet
  int packetSize = Udp.parsePacket();
  if (packetSize) {
    Serial.print("Received packet of size ");
    Serial.println(packetSize);

    Udp.beginPacket(Udp.remoteIP(), Udp.remotePort());
    Udp.print("Thanks for sending the packet!");
    Udp.endPacket();
    Serial.println("Response sent!");

    /*
    char* image = malloc(packetSize);
    if (image == NULL) {
      Serial.println("Malloc failed!!!");
    }

    // read the packet into packetBufffer
    int bytesRead = Udp.read(image, packetSize);
    drawHeapNew(image, packetSize/3);

    free(image);
    */
    /*
    char image_buffer[IMG_SIZE];

    int len = Udp.read(image_buffer, IMG_SIZE);
    for (int i = 0; i < IMG_SIZE/3; i++) {
      Serial.print("Pixel number ");
      Serial.print(i + 1);
      Serial.print(": ");
      Serial.print((int)image_buffer[(3*i)]);
      Serial.print(" ");
      Serial.print((int)image_buffer[(3*i) + 1]);
      Serial.print(" ");
      Serial.print((int)image_buffer[(3*i) + 2]);
      Serial.println();
    }
  }
  */
}

void startupAnimation() {

  // fix the screen with green
  matrix.fillRect(0, 0, matrix.width(), matrix.height(), matrix.Color333(0, 7, 0));
  delay(500);

  // draw a box in yellow
  matrix.drawRect(0, 0, matrix.width(), matrix.height(), matrix.Color333(7, 7, 0));
  delay(500);

  // draw an 'X' in red
  matrix.drawLine(0, 0, matrix.width()-1, matrix.height()-1, matrix.Color333(7, 0, 0));
  matrix.drawLine(matrix.width()-1, 0, 0, matrix.height()-1, matrix.Color333(7, 0, 0));
  delay(500);

  // draw a blue circle
  matrix.drawCircle(10, 10, 10, matrix.Color333(0, 0, 7));
  delay(500);

  // fill a violet circle
  matrix.fillCircle(40, 21, 10, matrix.Color333(7, 0, 7));
  delay(500);

  // fill the screen with 'black'
  matrix.fillScreen(matrix.Color333(0, 0, 0));
}

void printWifiStatus() {
  // print the SSID of the network you're attached to:
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());

  // print your board's IP address:
  IPAddress ip = WiFi.localIP();
  Serial.print("IP Address: ");
  Serial.println(ip);

  // print the received signal strength:
  long rssi = WiFi.RSSI();
  Serial.print("signal strength (RSSI):");
  Serial.print(rssi);
  Serial.println(" dBm");
}

void drawHeap(uint8_t* img, int numPixels) {
  for (int i = 0; i < numPixels; i++) {
    int index = i * 3; // calculate the index of the first element for each pixel
    uint8_t r = img[index];
    uint8_t g = img[index + 1];
    uint8_t b = img[index + 2];
    
    int col = i % 64;  // calculate the column index for the current pixel
    int row = i / 64;  // calculate the row index for the current pixel

    matrix.drawPixel(col, row, matrix.Color888(b, g, r, true));  // draw the pixel at the appropriate location
  }
  delay(5000);
  matrix.fillScreen(matrix.Color333(0, 0, 0));
}

void drawHeapNew(uint8_t* img, int numPixels) {
  int currPix = 0;
  for (int row = 0; row < 32; row++) {
    for (int col = 0; col < 64; col++) {
      uint8_t r = img[currPix*3];
      uint8_t g = img[(currPix*3) + 1];
      uint8_t b = img[(currPix*3) + 2];
      if (currPix >= numPixels) {
        matrix.drawPixel(col, row, matrix.Color333(0, 0, 0));
      } else {
        Serial.print("Pixel number ");
        Serial.print(currPix + 1);
        Serial.print(": ");
        Serial.print(r);
        Serial.print(" ");
        Serial.print(g);
        Serial.print(" ");
        Serial.print(b);
        Serial.println();
        matrix.drawPixel(col, row, matrix.Color888(b, g, r, true));
      }
      currPix++;
    }
  }
  delay(5000);
  matrix.fillScreen(matrix.Color333(0, 0, 0));
}
